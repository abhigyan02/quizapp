{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createBrowserRouter, RouterProvider, Navigate } from 'react-router-dom'; // Import necessary components\nimport LoginPage from './pages/LoginPage';\nimport HomePage from './pages/HomePage';\nimport QuizPage from './pages/QuizPage';\nimport QuizResultPage from './pages/QuizResultPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isOtpVerified, setIsOtpVerified] = useState(false); // State to track OTP verification status\n\n  // Define routes using createBrowserRouter\n  const router = createBrowserRouter([{\n    path: \"/home\",\n    element: isOtpVerified ? /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 47\n    }, this) // Redirect to login if OTP not verified\n  }, {\n    path: \"/quiz/:id\",\n    element: isOtpVerified ? /*#__PURE__*/_jsxDEV(QuizPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 47\n    }, this) // Redirect to login if OTP not verified\n  }, {\n    path: \"/quiz-results/:id\",\n    element: isOtpVerified ? /*#__PURE__*/_jsxDEV(QuizResultPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 53\n    }, this) // Redirect to login if OTP not verified\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this); // Provide router to the app\n};\n_s(App, \"0hkKYoWPOJnS3K0Rh56w3dGqE7E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createBrowserRouter","RouterProvider","Navigate","LoginPage","HomePage","QuizPage","QuizResultPage","jsxDEV","_jsxDEV","App","_s","isOtpVerified","setIsOtpVerified","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createBrowserRouter, RouterProvider, Navigate } from 'react-router-dom'; // Import necessary components\nimport LoginPage from './pages/LoginPage';\nimport HomePage from './pages/HomePage';\nimport QuizPage from './pages/QuizPage';\nimport QuizResultPage from './pages/QuizResultPage';\n\nconst App = () => {\n  const [isOtpVerified, setIsOtpVerified] = useState(false); // State to track OTP verification status\n\n  // Define routes using createBrowserRouter\n  const router = createBrowserRouter([\n    \n    {\n      path: \"/home\",\n      element: isOtpVerified ? <HomePage /> : <Navigate to=\"/\" />, // Redirect to login if OTP not verified\n    },\n    {\n      path: \"/quiz/:id\",\n      element: isOtpVerified ? <QuizPage /> : <Navigate to=\"/\" />, // Redirect to login if OTP not verified\n    },\n    {\n      path: \"/quiz-results/:id\",\n      element: isOtpVerified ? <QuizResultPage /> : <Navigate to=\"/\" />, // Redirect to login if OTP not verified\n    },\n  ]);\n\n  return <RouterProvider router={router} />; // Provide router to the app\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAClF,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,cAAc,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3D;EACA,MAAMc,MAAM,GAAGb,mBAAmB,CAAC,CAEjC;IACEc,IAAI,EAAE,OAAO;IACbC,OAAO,EAAEJ,aAAa,gBAAGH,OAAA,CAACJ,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGX,OAAA,CAACN,QAAQ;MAACkB,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAE;EAC/D,CAAC,EACD;IACEL,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAEJ,aAAa,gBAAGH,OAAA,CAACH,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGX,OAAA,CAACN,QAAQ;MAACkB,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAE;EAC/D,CAAC,EACD;IACEL,IAAI,EAAE,mBAAmB;IACzBC,OAAO,EAAEJ,aAAa,gBAAGH,OAAA,CAACF,cAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGX,OAAA,CAACN,QAAQ;MAACkB,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAE;EACrE,CAAC,CACF,CAAC;EAEF,oBAAOX,OAAA,CAACP,cAAc;IAACY,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;AAC7C,CAAC;AAACT,EAAA,CArBID,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAuBT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}