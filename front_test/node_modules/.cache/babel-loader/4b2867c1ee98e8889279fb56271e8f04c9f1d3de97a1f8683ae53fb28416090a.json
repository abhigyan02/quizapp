{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { sendOtp, verifyOtp } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Function to handle sending OTP to the provided email\n  const handleSendOtp = async () => {\n    if (!email) {\n      setErrorMessage('Please enter a valid email.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await sendOtp(email);\n      console.log('OTP send response:', response); // Debugging line\n      setIsOtpSent(true);\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage('Failed to send OTP. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to handle OTP verification\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      setErrorMessage('Please enter the OTP.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Calling the verifyOtp service with the email and OTP entered by the user\n      const response = await verifyOtp(email, otp);\n\n      // Debugging: Log the server response to check its structure\n      console.log('OTP verify response:', response);\n\n      // Check if response is defined and has the expected properties\n      if (response && response.message === 'OTP verified successfully, user logged in.') {\n        console.log('OTP verified successfully. Redirecting to home...');\n\n        // Store session data in localStorage\n        localStorage.setItem('session', JSON.stringify(response.session));\n\n        // Redirect to the homepage after successful OTP verification\n        window.location.href = '/home'; // Or window.location.replace('/home') for non-history redirection\n      } else {\n        // If response is not valid or message is different, show error\n        setErrorMessage((response === null || response === void 0 ? void 0 : response.message) || 'Invalid OTP');\n      }\n    } catch (error) {\n      console.error('Error during OTP verification:', error); // Debugging line\n      setErrorMessage(error.message || 'Failed to verify OTP.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        disabled: isLoading,\n        children: isLoading ? 'Sending OTP...' : 'Send OTP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isOtpSent && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        disabled: isLoading,\n        children: isLoading ? 'Verifying OTP...' : 'Verify OTP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"318mB57VPouTVYkjhuUHM8ku0Xc=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","sendOtp","verifyOtp","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","otp","setOtp","errorMessage","setErrorMessage","isOtpSent","setIsOtpSent","isLoading","setIsLoading","handleSendOtp","response","console","log","error","handleVerifyOtp","message","localStorage","setItem","JSON","stringify","session","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { sendOtp, verifyOtp } from '../services/authService';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Function to handle sending OTP to the provided email\r\n  const handleSendOtp = async () => {\r\n    if (!email) {\r\n      setErrorMessage('Please enter a valid email.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await sendOtp(email);\r\n      console.log('OTP send response:', response); // Debugging line\r\n      setIsOtpSent(true);\r\n      setErrorMessage('');\r\n    } catch (error) {\r\n      setErrorMessage('Failed to send OTP. Please try again later.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to handle OTP verification\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      setErrorMessage('Please enter the OTP.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      // Calling the verifyOtp service with the email and OTP entered by the user\r\n      const response = await verifyOtp(email, otp);\r\n\r\n      // Debugging: Log the server response to check its structure\r\n      console.log('OTP verify response:', response);\r\n\r\n      // Check if response is defined and has the expected properties\r\n      if (response && response.message === 'OTP verified successfully, user logged in.') {\r\n        console.log('OTP verified successfully. Redirecting to home...');\r\n\r\n        // Store session data in localStorage\r\n        localStorage.setItem('session', JSON.stringify(response.session));\r\n\r\n        // Redirect to the homepage after successful OTP verification\r\n        window.location.href = '/home';  // Or window.location.replace('/home') for non-history redirection\r\n      } else {\r\n        // If response is not valid or message is different, show error\r\n        setErrorMessage(response?.message || 'Invalid OTP');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during OTP verification:', error); // Debugging line\r\n      setErrorMessage(error.message || 'Failed to verify OTP.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h2>Login</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={handleSendOtp} disabled={isLoading}>\r\n          {isLoading ? 'Sending OTP...' : 'Send OTP'}\r\n        </button>\r\n      </div>\r\n\r\n      {isOtpSent && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={handleVerifyOtp} disabled={isLoading}>\r\n            {isLoading ? 'Verifying OTP...' : 'Verify OTP'}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}