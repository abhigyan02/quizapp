{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getQuizDetails } from '../api';\nimport Question from '../components/Question';\nimport { submitQuizResult } from '../services/quizService'; // Import submitQuizResult\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get quiz ID from URL\n  const [quiz, setQuiz] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const history = useHistory();\n\n  // Fetch quiz details when component mounts\n  useEffect(() => {\n    async function fetchQuizDetails() {\n      const data = await getQuizDetails(id);\n      setQuiz(data);\n    }\n    fetchQuizDetails();\n  }, [id]);\n\n  // Handle the selected answers\n  const handleAnswer = (questionId, answer) => {\n    setAnswers(prevAnswers => {\n      const updatedAnswers = [...prevAnswers];\n      updatedAnswers[questionId] = answer;\n      return updatedAnswers;\n    });\n  };\n\n  // Handle quiz submission\n  const handleSubmit = () => {\n    const result = {\n      userId: 1,\n      // Example, in reality, get the logged-in user's ID from auth context or state\n      quizId: quiz.id,\n      score: answers.reduce((score, answer) => score + (answer.isCorrect ? 1 : 0), 0) // Calculate score based on correct answers\n    };\n    // Submit result to the backend\n    submitQuizResult(result); // This is the function you imported\n    history.push('/result'); // Redirect to the result page after submission\n  };\n\n  // Loading state while quiz details are being fetched\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(Question, {\n        question: question,\n        onAnswer: answer => handleAnswer(index, answer) // Handle each answer submission\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"6N9J5Q8PkUttKCakBK1lkBbtxf4=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","getQuizDetails","Question","submitQuizResult","jsxDEV","_jsxDEV","QuizPage","_s","id","quiz","setQuiz","answers","setAnswers","history","fetchQuizDetails","data","handleAnswer","questionId","answer","prevAnswers","updatedAnswers","handleSubmit","result","userId","quizId","score","reduce","isCorrect","push","children","fileName","_jsxFileName","lineNumber","columnNumber","title","questions","map","question","index","onAnswer","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/QuizPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getQuizDetails } from '../api';  \r\nimport Question from '../components/Question';\r\nimport { submitQuizResult } from '../services/quizService';  // Import submitQuizResult\r\n\r\nconst QuizPage = () => {\r\n  const { id } = useParams();  // Get quiz ID from URL\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const history = useHistory();\r\n\r\n  // Fetch quiz details when component mounts\r\n  useEffect(() => {\r\n    async function fetchQuizDetails() {\r\n      const data = await getQuizDetails(id);\r\n      setQuiz(data);\r\n    }\r\n    fetchQuizDetails();\r\n  }, [id]);\r\n\r\n  // Handle the selected answers\r\n  const handleAnswer = (questionId, answer) => {\r\n    setAnswers((prevAnswers) => {\r\n      const updatedAnswers = [...prevAnswers];\r\n      updatedAnswers[questionId] = answer;\r\n      return updatedAnswers;\r\n    });\r\n  };\r\n\r\n  // Handle quiz submission\r\n  const handleSubmit = () => {\r\n    const result = {\r\n      userId: 1,  // Example, in reality, get the logged-in user's ID from auth context or state\r\n      quizId: quiz.id,\r\n      score: answers.reduce((score, answer) => score + (answer.isCorrect ? 1 : 0), 0)  // Calculate score based on correct answers\r\n    };\r\n    // Submit result to the backend\r\n    submitQuizResult(result);  // This is the function you imported\r\n    history.push('/result');  // Redirect to the result page after submission\r\n  };\r\n\r\n  // Loading state while quiz details are being fetched\r\n  if (!quiz) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{quiz.title}</h1>\r\n      <div>\r\n        {quiz.questions.map((question, index) => (\r\n          <Question\r\n            key={index}\r\n            question={question}\r\n            onAnswer={answer => handleAnswer(index, answer)}  // Handle each answer submission\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}