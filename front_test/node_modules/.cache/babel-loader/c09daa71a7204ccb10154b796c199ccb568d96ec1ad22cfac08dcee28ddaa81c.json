{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './../../src/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const navigate = useNavigate();\n  const fetchQuizData = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/quiz/${id}`);\n      const data = await response.json();\n      setQuiz(data);\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  }, [id]);\n  useEffect(() => {\n    fetchQuizData();\n  }, [fetchQuizData]);\n  const handleAnswerSelection = answer => {\n    setSelectedAnswer(answer);\n  };\n  const handleNext = () => {\n    setAnswers([...answers, {\n      questionId: quiz.questions[currentQuestionIndex].id,\n      selectedOption: selectedAnswer\n    }]);\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setSelectedAnswer(null);\n  };\n  const handleSubmitQuiz = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/submit-quiz', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          answers,\n          quizId: id\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        navigate(`/quiz/result/${id}`, {\n          state: {\n            score: data.score\n          }\n        });\n      } else {\n        alert('Error submitting quiz');\n      }\n    } catch (error) {\n      console.error('Error submitting quiz:', error);\n    }\n  };\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = quiz.questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quiz.quiz_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", currentQuestionIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentQuestion.question_text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentQuestion.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerSelection(option),\n        children: option\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), currentQuestionIndex === quiz.questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitQuiz,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"LHcza1rkzhTmotPDD+6mw/GE1Zw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","jsxDEV","_jsxDEV","QuizPage","_s","id","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","answers","setAnswers","navigate","fetchQuizData","response","fetch","data","json","error","console","handleAnswerSelection","answer","handleNext","questionId","questions","selectedOption","handleSubmitQuiz","method","headers","body","JSON","stringify","quizId","ok","state","score","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","quiz_title","question_text","options","map","option","idx","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './../../src/App.css';\r\n\r\nconst QuizPage = () => {\r\n  const { id } = useParams();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchQuizData = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/quiz/${id}`);\r\n      const data = await response.json();\r\n      setQuiz(data);\r\n    } catch (error) {\r\n      console.error('Error fetching quiz data:', error);\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    fetchQuizData();\r\n  }, [fetchQuizData]);\r\n\r\n  const handleAnswerSelection = (answer) => {\r\n    setSelectedAnswer(answer);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setAnswers([...answers, { questionId: quiz.questions[currentQuestionIndex].id, selectedOption: selectedAnswer }]);\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    setSelectedAnswer(null);\r\n  };\r\n\r\n  const handleSubmitQuiz = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/submit-quiz', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          answers,\r\n          quizId: id\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        navigate(`/quiz/result/${id}`, { state: { score: data.score } });\r\n      } else {\r\n        alert('Error submitting quiz');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting quiz:', error);\r\n    }\r\n  };\r\n\r\n  if (!quiz) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentQuestion = quiz.questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div>\r\n      <h1>{quiz.quiz_title}</h1>\r\n      <h2>Question {currentQuestionIndex + 1}</h2>\r\n      <p>{currentQuestion.question_text}</p>\r\n      <div>\r\n        {currentQuestion.options.map((option, idx) => (\r\n          <button key={idx} onClick={() => handleAnswerSelection(option)}>\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleNext}>Next</button>\r\n      {currentQuestionIndex === quiz.questions.length - 1 && (\r\n        <button onClick={handleSubmitQuiz}>Submit Quiz</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}