{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // React Router hook\nimport { sendOtp, verifyOtp } from '../services/authService'; // Import OTP functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const navigate = useNavigate(); // React Router hook\n\n  // Handle sending OTP\n  const handleSendOtp = async () => {\n    if (!email) {\n      setErrorMessage('Please enter a valid email.');\n      return;\n    }\n    try {\n      await sendOtp(email); // Send OTP request\n      setIsOtpSent(true); // Set OTP sent state\n      setErrorMessage(''); // Clear previous error message\n    } catch (error) {\n      setErrorMessage('Failed to send OTP. Please try again later.');\n    }\n  };\n\n  // Handle OTP verification\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      setErrorMessage('Please enter the OTP.');\n      return;\n    }\n    try {\n      const isVerified = await verifyOtp(email, otp); // Verify OTP\n\n      if (isVerified) {\n        navigate('/home'); // Redirect to Home page on successful verification\n      } else {\n        setErrorMessage('Invalid OTP. Please try again.');\n      }\n    } catch (error) {\n      setErrorMessage('Error during OTP verification. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), !isOtpSent && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), isOtpSent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"bTiG8kRUkVbONgDnL+vxKoB063k=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","sendOtp","verifyOtp","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","otp","setOtp","errorMessage","setErrorMessage","isOtpSent","setIsOtpSent","navigate","handleSendOtp","error","handleVerifyOtp","isVerified","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // React Router hook\r\nimport { sendOtp, verifyOtp } from '../services/authService'; // Import OTP functions\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n  const navigate = useNavigate(); // React Router hook\r\n\r\n  // Handle sending OTP\r\n  const handleSendOtp = async () => {\r\n    if (!email) {\r\n      setErrorMessage('Please enter a valid email.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await sendOtp(email); // Send OTP request\r\n      setIsOtpSent(true); // Set OTP sent state\r\n      setErrorMessage(''); // Clear previous error message\r\n    } catch (error) {\r\n      setErrorMessage('Failed to send OTP. Please try again later.');\r\n    }\r\n  };\r\n\r\n  // Handle OTP verification\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      setErrorMessage('Please enter the OTP.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const isVerified = await verifyOtp(email, otp); // Verify OTP\r\n\r\n      if (isVerified) {\r\n        navigate('/home'); // Redirect to Home page on successful verification\r\n      } else {\r\n        setErrorMessage('Invalid OTP. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Error during OTP verification. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h2>Login</h2>\r\n\r\n      {/* Show email input if OTP hasn't been sent */}\r\n      {!isOtpSent && (\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <button onClick={handleSendOtp}>Send OTP</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Show OTP input if OTP is sent */}\r\n      {isOtpSent && (\r\n        <div className=\"otp-section\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error message display */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}