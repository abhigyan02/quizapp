{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getQuizDetails } from '../api'; // Assuming this is the correct API call\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get quizId from URL\n  const [quiz, setQuiz] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  useEffect(() => {\n    const fetchQuizDetails = async () => {\n      try {\n        const quizData = await getQuizDetails(id); // Fetch quiz questions and answers\n        setQuiz(quizData); // Store quiz details\n      } catch (error) {\n        console.error('Error fetching quiz details:', error);\n      }\n    };\n    fetchQuizDetails();\n  }, [id]);\n  const handleAnswerChange = (questionId, selectedAnswerId) => {\n    setAnswers(prevAnswers => {\n      const updatedAnswers = prevAnswers.filter(answer => answer.questionId !== questionId);\n      updatedAnswers.push({\n        questionId,\n        answerId: selectedAnswerId\n      });\n      return updatedAnswers;\n    });\n  };\n  const handleSubmit = async () => {\n    // Submit the quiz results with answers\n    const result = {\n      userId: 1,\n      // Assuming this is the logged-in user's ID\n      otp: '1234',\n      // Assuming OTP is already validated\n      quizId: id,\n      answers: answers.map(answer => ({\n        questionId: answer.questionId,\n        isCorrect: answer.answerId === 2 // Example: hardcoded answer check\n      }))\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/submit-quiz', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(result)\n      });\n      const data = await response.json();\n      console.log('Quiz submitted successfully:', data);\n    } catch (error) {\n      console.error('Error submitting quiz:', error);\n    }\n  };\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading quiz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), quiz.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.question_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), question.answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${question.id}`,\n          value: answer.id,\n          onChange: () => handleAnswerChange(question.id, answer.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: answer.answer_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, answer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"30VvlHglEWAW4wroTfVyR2r2ynQ=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getQuizDetails","jsxDEV","_jsxDEV","QuizPage","_s","id","quiz","setQuiz","answers","setAnswers","fetchQuizDetails","quizData","error","console","handleAnswerChange","questionId","selectedAnswerId","prevAnswers","updatedAnswers","filter","answer","push","answerId","handleSubmit","result","userId","otp","quizId","map","isCorrect","response","fetch","method","headers","body","JSON","stringify","data","json","log","children","fileName","_jsxFileName","lineNumber","columnNumber","title","questions","question","question_text","type","name","value","onChange","answer_text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getQuizDetails } from '../api'; // Assuming this is the correct API call\r\n\r\nconst QuizPage = () => {\r\n  const { id } = useParams();  // Get quizId from URL\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchQuizDetails = async () => {\r\n      try {\r\n        const quizData = await getQuizDetails(id);  // Fetch quiz questions and answers\r\n        setQuiz(quizData); // Store quiz details\r\n      } catch (error) {\r\n        console.error('Error fetching quiz details:', error);\r\n      }\r\n    };\r\n\r\n    fetchQuizDetails();\r\n  }, [id]);\r\n\r\n  const handleAnswerChange = (questionId, selectedAnswerId) => {\r\n    setAnswers((prevAnswers) => {\r\n      const updatedAnswers = prevAnswers.filter(answer => answer.questionId !== questionId);\r\n      updatedAnswers.push({ questionId, answerId: selectedAnswerId });\r\n      return updatedAnswers;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // Submit the quiz results with answers\r\n    const result = {\r\n      userId: 1,  // Assuming this is the logged-in user's ID\r\n      otp: '1234',  // Assuming OTP is already validated\r\n      quizId: id,\r\n      answers: answers.map((answer) => ({\r\n        questionId: answer.questionId,\r\n        isCorrect: answer.answerId === 2, // Example: hardcoded answer check\r\n      })),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/submit-quiz', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(result),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Quiz submitted successfully:', data);\r\n    } catch (error) {\r\n      console.error('Error submitting quiz:', error);\r\n    }\r\n  };\r\n\r\n  if (!quiz) return <div>Loading quiz...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{quiz.title}</h1>\r\n      {quiz.questions.map((question) => (\r\n        <div key={question.id}>\r\n          <h3>{question.question_text}</h3>\r\n          {question.answers.map((answer) => (\r\n            <div key={answer.id}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${question.id}`}\r\n                value={answer.id}\r\n                onChange={() => handleAnswerChange(question.id, answer.id)}\r\n              />\r\n              <label>{answer.answer_text}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Submit Quiz</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}