{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport '../../src/App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const navigate = useNavigate(); // Hook to navigate to QuizPage\n\n  // Function to send OTP to the provided email (Simulated as no actual OTP sending here)\n  const handleSendOtp = () => {\n    if (!email) {\n      setErrorMessage('Please enter a valid email.');\n      return;\n    }\n    setIsOtpSent(true);\n    setErrorMessage(''); // Reset error message\n    // Simulate OTP sent (in a real scenario, OTP would be sent via API)\n  };\n\n  // Function to handle OTP verification with hardcoded OTP '123'\n  const handleVerifyOtp = () => {\n    if (!email || !otp) {\n      setErrorMessage('Please enter both email and OTP');\n      return;\n    }\n    if (otp === '123') {\n      // OTP is correct, allow login and navigate to quiz page\n      localStorage.setItem('user_email', email); // Save email to localStorage (Optional)\n      setErrorMessage(''); // Reset error message\n      navigate(`/quiz/${1}`); // Navigate to QuizPage with quiz ID 1 (or based on your logic)\n    } else {\n      setErrorMessage('Invalid OTP. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"input-field\",\n      placeholder: \"Enter your email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"otp-button\",\n      onClick: handleSendOtp,\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isOtpSent && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"otp-button\",\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this), isOtpSent && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: \"OTP sent successfully. Please check your email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"bTiG8kRUkVbONgDnL+vxKoB063k=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","otp","setOtp","errorMessage","setErrorMessage","isOtpSent","setIsOtpSent","navigate","handleSendOtp","handleVerifyOtp","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react'; \r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate for redirection\r\nimport '../../src/App.css';  // Import the CSS file\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n  const navigate = useNavigate(); // Hook to navigate to QuizPage\r\n\r\n  // Function to send OTP to the provided email (Simulated as no actual OTP sending here)\r\n  const handleSendOtp = () => {\r\n    if (!email) {\r\n      setErrorMessage('Please enter a valid email.');\r\n      return;\r\n    }\r\n\r\n    setIsOtpSent(true);\r\n    setErrorMessage(''); // Reset error message\r\n    // Simulate OTP sent (in a real scenario, OTP would be sent via API)\r\n  };\r\n\r\n  // Function to handle OTP verification with hardcoded OTP '123'\r\n  const handleVerifyOtp = () => {\r\n    if (!email || !otp) {\r\n      setErrorMessage('Please enter both email and OTP');\r\n      return;\r\n    }\r\n\r\n    if (otp === '123') {\r\n      // OTP is correct, allow login and navigate to quiz page\r\n      localStorage.setItem('user_email', email);  // Save email to localStorage (Optional)\r\n      setErrorMessage('');  // Reset error message\r\n      navigate(`/quiz/${1}`); // Navigate to QuizPage with quiz ID 1 (or based on your logic)\r\n    } else {\r\n      setErrorMessage('Invalid OTP. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h2>Login</h2>\r\n\r\n      {/* Email Input */}\r\n      <input\r\n        type=\"email\"\r\n        className=\"input-field\"\r\n        placeholder=\"Enter your email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <button className=\"otp-button\" onClick={handleSendOtp}>Send OTP</button>\r\n\r\n      {/* OTP Input */}\r\n      {isOtpSent && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-field\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button className=\"otp-button\" onClick={handleVerifyOtp}>Verify OTP</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error Message Display */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n      {/* OTP sent message */}\r\n      {isOtpSent && <p className=\"success-message\">OTP sent successfully. Please check your email.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}