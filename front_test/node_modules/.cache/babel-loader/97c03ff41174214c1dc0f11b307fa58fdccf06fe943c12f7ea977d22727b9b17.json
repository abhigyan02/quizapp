{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport { sendOtp, verifyOtp } from '../services/authService'; // Ensure verifyOtp is imported correctly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const navigate = useNavigate(); // Initialize navigate function\n\n  // Function to send OTP to the provided email\n  const handleSendOtp = async () => {\n    if (!email) {\n      setErrorMessage('Please enter a valid email.');\n      return;\n    }\n    try {\n      await sendOtp(email);\n      setIsOtpSent(true);\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage('Failed to send OTP. Please try again later.');\n    }\n  };\n\n  // Function to verify OTP\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      setErrorMessage('Please enter the OTP.');\n      return;\n    }\n    try {\n      const response = await verifyOtp(email, otp);\n      if (response.success) {\n        // Navigate to the homepage after successful OTP verification\n        navigate('/home');\n      } else {\n        setErrorMessage(response.message || 'Invalid OTP. Please try again.');\n      }\n    } catch (error) {\n      setErrorMessage('Error verifying OTP. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isOtpSent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"OTP has been sent to your email. Please enter it below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        placeholder: \"Enter OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"bTiG8kRUkVbONgDnL+vxKoB063k=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","sendOtp","verifyOtp","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","otp","setOtp","errorMessage","setErrorMessage","isOtpSent","setIsOtpSent","navigate","handleSendOtp","error","handleVerifyOtp","response","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate hook\r\nimport { sendOtp, verifyOtp } from '../services/authService';  // Ensure verifyOtp is imported correctly\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n  const navigate = useNavigate();  // Initialize navigate function\r\n\r\n  // Function to send OTP to the provided email\r\n  const handleSendOtp = async () => {\r\n    if (!email) {\r\n      setErrorMessage('Please enter a valid email.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await sendOtp(email);\r\n      setIsOtpSent(true);\r\n      setErrorMessage('');\r\n    } catch (error) {\r\n      setErrorMessage('Failed to send OTP. Please try again later.');\r\n    }\r\n  };\r\n\r\n  // Function to verify OTP\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      setErrorMessage('Please enter the OTP.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await verifyOtp(email, otp);\r\n      if (response.success) {\r\n        // Navigate to the homepage after successful OTP verification\r\n        navigate('/home');\r\n      } else {\r\n        setErrorMessage(response.message || 'Invalid OTP. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Error verifying OTP. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h2>Login</h2>\r\n\r\n      <div className=\"email-section\">\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Enter your email\"\r\n        />\r\n        <button onClick={handleSendOtp}>Send OTP</button>\r\n      </div>\r\n\r\n      {isOtpSent && (\r\n        <div className=\"otp-section\">\r\n          <p>OTP has been sent to your email. Please enter it below.</p>\r\n          <input\r\n            type=\"text\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n            placeholder=\"Enter OTP\"\r\n          />\r\n          <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n        </div>\r\n      )}\r\n\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}