{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // Import useNavigate\nimport './../../src/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get quiz ID from URL parameter\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [timer, setTimer] = useState(30);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const navigate = useNavigate();\n\n  // Fetch quiz data on page load\n  useEffect(() => {\n    const fetchQuizData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/quiz/${id}`);\n        if (!response.ok) {\n          throw new Error(\"Quiz not found or invalid response\");\n        }\n        const data = await response.json();\n        setQuiz(data);\n      } catch (error) {\n        console.error('Error fetching quiz data:', error);\n        alert('Failed to load quiz. Please try again later.');\n      }\n    };\n    fetchQuizData();\n  }, [id]);\n  const handleAnswerSelection = answer => {\n    setSelectedAnswer(answer);\n  };\n  const handleNext = () => {\n    if (selectedAnswer) {\n      setSelectedAnswers(prev => ({\n        ...prev,\n        [quiz.questions[currentQuestionIndex].id]: selectedAnswer\n      }));\n      setSelectedAnswer(null);\n      setCurrentQuestionIndex(prev => prev + 1);\n      setTimer(30); // Reset timer for next question\n    }\n  };\n  const handleSubmitQuiz = async () => {\n    try {\n      // Collect answers for submission\n      const answers = Object.keys(selectedAnswers).map(questionId => ({\n        questionId: questionId,\n        selectedOption: selectedAnswers[questionId]\n      }));\n      const response = await fetch('http://localhost:5000/api/submit-quiz', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          answers,\n          quizId: id\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to submit the quiz\");\n      }\n      const data = await response.json();\n      console.log(data.message);\n\n      // Navigate to the results page with the score\n      navigate(`/quiz/result/${id}`, {\n        state: {\n          score: data.score\n        }\n      });\n    } catch (error) {\n      console.error('Error submitting quiz:', error);\n      alert('Failed to submit the quiz. Please try again later.');\n    }\n  };\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  if (!(quiz !== null && quiz !== void 0 && quiz.questions) || quiz.questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No questions available for this quiz.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = quiz === null || quiz === void 0 ? void 0 : quiz.questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quiz.quiz_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Time Left: \", timer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.answer_options.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `answer-option ${selectedAnswer === answer.answer_text ? 'selected' : ''}`,\n          onClick: () => handleAnswerSelection(answer.answer_text),\n          children: answer.answer_text\n        }, answer.answer_text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentQuestionIndex < quiz.questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: !selectedAnswer,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitQuiz,\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"mWc6XRsDbh4qmWwQmUjRGAoHVqI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","jsxDEV","_jsxDEV","QuizPage","_s","id","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","timer","setTimer","selectedAnswers","setSelectedAnswers","navigate","fetchQuizData","response","fetch","ok","Error","data","json","error","console","alert","handleAnswerSelection","answer","handleNext","prev","questions","handleSubmitQuiz","answers","Object","keys","map","questionId","selectedOption","method","headers","body","JSON","stringify","quizId","log","message","state","score","children","fileName","_jsxFileName","lineNumber","columnNumber","length","currentQuestion","quiz_title","question_text","className","answer_options","answer_text","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport './../../src/App.css';\r\n\r\nconst QuizPage = () => {\r\n  const { id } = useParams(); // Get quiz ID from URL parameter\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [timer, setTimer] = useState(30);\r\n  const [selectedAnswers, setSelectedAnswers] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch quiz data on page load\r\n  useEffect(() => {\r\n    const fetchQuizData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/quiz/${id}`);\r\n        if (!response.ok) {\r\n          throw new Error(\"Quiz not found or invalid response\");\r\n        }\r\n        const data = await response.json();\r\n        setQuiz(data);\r\n      } catch (error) {\r\n        console.error('Error fetching quiz data:', error);\r\n        alert('Failed to load quiz. Please try again later.');\r\n      }\r\n    };\r\n\r\n    fetchQuizData();\r\n  }, [id]);\r\n\r\n  const handleAnswerSelection = (answer) => {\r\n    setSelectedAnswer(answer);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (selectedAnswer) {\r\n      setSelectedAnswers(prev => ({\r\n        ...prev,\r\n        [quiz.questions[currentQuestionIndex].id]: selectedAnswer\r\n      }));\r\n      setSelectedAnswer(null);\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n      setTimer(30); // Reset timer for next question\r\n    }\r\n  };\r\n\r\n  const handleSubmitQuiz = async () => {\r\n    try {\r\n      // Collect answers for submission\r\n      const answers = Object.keys(selectedAnswers).map((questionId) => ({\r\n        questionId: questionId,\r\n        selectedOption: selectedAnswers[questionId]\r\n      }));\r\n\r\n      const response = await fetch('http://localhost:5000/api/submit-quiz', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          answers,\r\n          quizId: id,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to submit the quiz\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data.message);\r\n\r\n      // Navigate to the results page with the score\r\n      navigate(`/quiz/result/${id}`, { state: { score: data.score } });\r\n    } catch (error) {\r\n      console.error('Error submitting quiz:', error);\r\n      alert('Failed to submit the quiz. Please try again later.');\r\n    }\r\n  };\r\n\r\n  if (!quiz) {\r\n    return <div>Loading quiz...</div>;\r\n  }\r\n\r\n  if (!quiz?.questions || quiz.questions.length === 0) {\r\n    return <div>No questions available for this quiz.</div>;\r\n  }\r\n\r\n  const currentQuestion = quiz?.questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div>\r\n      <h1>{quiz.quiz_title}</h1>\r\n\r\n      {/* Display Question and Timer */}\r\n      <div>\r\n        <h3>{currentQuestion?.question_text}</h3>\r\n        <div>Time Left: {timer}s</div>\r\n\r\n        {/* Display the answer options */}\r\n        <div className=\"answers\">\r\n          {currentQuestion?.answer_options.map((answer) => (\r\n            <div\r\n              key={answer.answer_text}\r\n              className={`answer-option ${selectedAnswer === answer.answer_text ? 'selected' : ''}`}\r\n              onClick={() => handleAnswerSelection(answer.answer_text)}\r\n            >\r\n              {answer.answer_text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Next Button */}\r\n      <div>\r\n        {currentQuestionIndex < quiz.questions.length - 1 ? (\r\n          <button onClick={handleNext} disabled={!selectedAnswer}>\r\n            Next Question\r\n          </button>\r\n        ) : (\r\n          <button onClick={handleSubmitQuiz}>Submit Quiz</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}