{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = ({\n  quizId\n}) => {\n  _s();\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // Fetch the quiz data (questions) when the component mounts\n    const fetchQuizData = async () => {\n      const response = await fetch(`/api/quiz/${quizId}`);\n      const data = await response.json();\n      setAnswers(data.questions.map(question => ({\n        questionId: question.id,\n        userAnswer: '' // Initialize answers as empty\n      })));\n    };\n    fetchQuizData();\n  }, [quizId]);\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers(prevAnswers => prevAnswers.map(a => a.questionId === questionId ? {\n      ...a,\n      userAnswer: answer\n    } : a));\n  };\n  const handleSubmit = async () => {\n    // Check if all questions are answered\n    const unansweredQuestions = answers.filter(answer => !answer.userAnswer);\n    if (unansweredQuestions.length > 0) {\n      alert('Please complete the quiz before submitting.');\n      return;\n    }\n\n    // Display loading indicator\n    setLoading(true);\n    try {\n      const response = await fetch('/api/submit-quiz', {\n        method: 'POST',\n        body: JSON.stringify({\n          quizId,\n          answers\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`Quiz submitted! Your score: ${data.score}`);\n      } else {\n        alert(data.message || 'Failed to submit quiz');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('An error occurred while submitting the quiz');\n    } finally {\n      setLoading(false); // Hide loading spinner\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: `question-${answer.questionId}`,\n        value: \"A\",\n        onChange: () => handleAnswerChange(answer.questionId, 'A'),\n        checked: answer.userAnswer === 'A'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), \" A\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: `question-${answer.questionId}`,\n        value: \"B\",\n        onChange: () => handleAnswerChange(answer.questionId, 'B'),\n        checked: answer.userAnswer === 'B'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), \" B\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: `question-${answer.questionId}`,\n        value: \"C\",\n        onChange: () => handleAnswerChange(answer.questionId, 'C'),\n        checked: answer.userAnswer === 'C'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), \" C\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: `question-${answer.questionId}`,\n        value: \"D\",\n        onChange: () => handleAnswerChange(answer.questionId, 'D'),\n        checked: answer.userAnswer === 'D'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), \" D\"]\n    }, answer.questionId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"xx4GxhV0dSYOkCq5JUdbR078FWg=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuizPage","quizId","_s","answers","setAnswers","loading","setLoading","fetchQuizData","response","fetch","data","json","questions","map","question","questionId","id","userAnswer","handleAnswerChange","answer","prevAnswers","a","handleSubmit","unansweredQuestions","filter","length","alert","method","body","JSON","stringify","headers","ok","score","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","index","type","name","value","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst QuizPage = ({ quizId }) => {\r\n  const [answers, setAnswers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch the quiz data (questions) when the component mounts\r\n    const fetchQuizData = async () => {\r\n      const response = await fetch(`/api/quiz/${quizId}`);\r\n      const data = await response.json();\r\n      setAnswers(data.questions.map(question => ({\r\n        questionId: question.id,\r\n        userAnswer: '', // Initialize answers as empty\r\n      })));\r\n    };\r\n\r\n    fetchQuizData();\r\n  }, [quizId]);\r\n\r\n  const handleAnswerChange = (questionId, answer) => {\r\n    setAnswers(prevAnswers => \r\n      prevAnswers.map(a => \r\n        a.questionId === questionId ? { ...a, userAnswer: answer } : a\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // Check if all questions are answered\r\n    const unansweredQuestions = answers.filter(answer => !answer.userAnswer);\r\n    \r\n    if (unansweredQuestions.length > 0) {\r\n      alert('Please complete the quiz before submitting.');\r\n      return;\r\n    }\r\n\r\n    // Display loading indicator\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('/api/submit-quiz', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ quizId, answers }),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(`Quiz submitted! Your score: ${data.score}`);\r\n      } else {\r\n        alert(data.message || 'Failed to submit quiz');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('An error occurred while submitting the quiz');\r\n    } finally {\r\n      setLoading(false); // Hide loading spinner\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div>Loading...</div>}\r\n      \r\n      <h1>Quiz</h1>\r\n      \r\n      {/* Render questions and provide answer choices */}\r\n      {answers.map((answer, index) => (\r\n        <div key={answer.questionId}>\r\n          <h3>Question {index + 1}</h3>\r\n          {/* Assuming each question has multiple choices */}\r\n          <input \r\n            type=\"radio\" \r\n            name={`question-${answer.questionId}`} \r\n            value=\"A\" \r\n            onChange={() => handleAnswerChange(answer.questionId, 'A')}\r\n            checked={answer.userAnswer === 'A'}\r\n          /> A\r\n          <input \r\n            type=\"radio\" \r\n            name={`question-${answer.questionId}`} \r\n            value=\"B\" \r\n            onChange={() => handleAnswerChange(answer.questionId, 'B')}\r\n            checked={answer.userAnswer === 'B'}\r\n          /> B\r\n          <input \r\n            type=\"radio\" \r\n            name={`question-${answer.questionId}`} \r\n            value=\"C\" \r\n            onChange={() => handleAnswerChange(answer.questionId, 'C')}\r\n            checked={answer.userAnswer === 'C'}\r\n          /> C\r\n          <input \r\n            type=\"radio\" \r\n            name={`question-${answer.questionId}`} \r\n            value=\"D\" \r\n            onChange={() => handleAnswerChange(answer.questionId, 'D')}\r\n            checked={answer.userAnswer === 'D'}\r\n          /> D\r\n        </div>\r\n      ))}\r\n      \r\n      <button onClick={handleSubmit}>Submit Quiz</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}