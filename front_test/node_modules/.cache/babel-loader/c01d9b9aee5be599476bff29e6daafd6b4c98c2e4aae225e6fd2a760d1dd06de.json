{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\QuizResultPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizResultPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get quiz ID from URL\n  const [result, setResult] = useState(null); // Store result data\n  const [loading, setLoading] = useState(true); // Loading state to display loading message\n  const [error, setError] = useState(null); // Error state to handle any errors\n  const navigate = useNavigate(); // Hook for navigation\n\n  useEffect(() => {\n    const fetchResult = async () => {\n      try {\n        // Fetch the quiz result from the backend using the quiz ID\n        const response = await fetch(`http://localhost:5000/api/results/${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch result');\n        }\n        const data = await response.json();\n        setResult(data); // Set the result data\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (err) {\n        setError('Something went wrong. Please try again later.'); // More user-friendly error message\n        setLoading(false);\n      }\n    };\n    fetchResult(); // Call the function to fetch the result\n  }, [id]); // Effect runs whenever the `id` changes (when the user navigates to a new quiz result page)\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-message\",\n      children: \"Loading your result...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this); // Show loading message until data is fetched\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this); // Display error message if there's an error\n  }\n  if (!result) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No result found for this quiz.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this); // Handle case where no result is found\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Quiz Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }, this), \" \", result.quiz_title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Your Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }, this), \" \", result.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Submitted By:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }, this), \" \", result.user_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"go-back-button\",\n      onClick: () => navigate(-1),\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizResultPage, \"CzhYpvwunIU3MulA/K0NUI7BFys=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizResultPage;\nexport default QuizResultPage;\nvar _c;\n$RefreshReg$(_c, \"QuizResultPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","QuizResultPage","_s","id","result","setResult","loading","setLoading","error","setError","navigate","fetchResult","response","fetch","ok","Error","data","json","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","quiz_title","score","user_name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/QuizResultPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst QuizResultPage = () => {\r\n  const { id } = useParams();  // Get quiz ID from URL\r\n  const [result, setResult] = useState(null);  // Store result data\r\n  const [loading, setLoading] = useState(true);  // Loading state to display loading message\r\n  const [error, setError] = useState(null);  // Error state to handle any errors\r\n  const navigate = useNavigate();  // Hook for navigation\r\n\r\n  useEffect(() => {\r\n    const fetchResult = async () => {\r\n      try {\r\n        // Fetch the quiz result from the backend using the quiz ID\r\n        const response = await fetch(`http://localhost:5000/api/results/${id}`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch result');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setResult(data);  // Set the result data\r\n        setLoading(false); // Set loading to false after data is fetched\r\n      } catch (err) {\r\n        setError('Something went wrong. Please try again later.');  // More user-friendly error message\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchResult();  // Call the function to fetch the result\r\n  }, [id]);  // Effect runs whenever the `id` changes (when the user navigates to a new quiz result page)\r\n\r\n  if (loading) {\r\n    return <div className=\"loading-message\">Loading your result...</div>;  // Show loading message until data is fetched\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">Error: {error}</div>;  // Display error message if there's an error\r\n  }\r\n\r\n  if (!result) {\r\n    return <div>No result found for this quiz.</div>;  // Handle case where no result is found\r\n  }\r\n\r\n  return (\r\n    <div className=\"result-container\">\r\n      <h1>Quiz Results</h1>\r\n      <div className=\"result-details\">\r\n        <p><strong>Quiz Title:</strong> {result.quiz_title}</p>\r\n        <p><strong>Your Score:</strong> {result.score}</p>\r\n        <p><strong>Submitted By:</strong> {result.user_name}</p>\r\n      </div>\r\n\r\n      {/* You can display other information like feedback, total number of questions, etc. here */}\r\n\r\n      <button className=\"go-back-button\" onClick={() => navigate(-1)}>Go Back</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizResultPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}