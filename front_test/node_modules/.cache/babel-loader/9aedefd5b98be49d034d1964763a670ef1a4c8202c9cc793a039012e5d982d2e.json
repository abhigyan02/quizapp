{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { sendOtp, verifyOtp } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [isVerifying, setIsVerifying] = useState(false); // To track verification status\n  const navigate = useNavigate();\n  const handleSendOtp = async () => {\n    if (!email) {\n      setErrorMessage('Please enter a valid email.');\n      return;\n    }\n    try {\n      setErrorMessage(''); // Clear any previous error messages\n      await sendOtp(email);\n      setIsOtpSent(true); // OTP sent\n      setOtp(''); // Clear the OTP input field\n    } catch (error) {\n      setErrorMessage('Failed to send OTP. Please try again later.');\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      setErrorMessage('Please enter the OTP.');\n      return;\n    }\n    setIsVerifying(true); // Set verifying state to true\n    setErrorMessage(''); // Clear any previous error messages\n\n    try {\n      const response = await verifyOtp(email, otp); // Verify the OTP\n      console.log('Full OTP verification response:', response); // Log full response\n      const {\n        message,\n        session\n      } = response; // Destructure message and session\n\n      if (message === 'OTP verified successfully, user logged in.') {\n        console.log('OTP verified successfully, user logged in', session);\n        navigate('/home'); // Navigate to home\n      } else {\n        setErrorMessage('Invalid OTP. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error during OTP verification:', error); // Log any errors\n      setErrorMessage('Error during OTP verification. Please try again later.');\n    } finally {\n      setIsVerifying(false); // Reset verifying state after process\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        disabled: isOtpSent // Disable the button after OTP is sent\n        ,\n        children: isOtpSent ? 'OTP Sent' : 'Send OTP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isOtpSent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        disabled: isVerifying,\n        children: isVerifying ? 'Verifying...' : 'Verify OTP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"7QwrakTPm5lnQ0bnkLbEFXK2SAo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","sendOtp","verifyOtp","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","otp","setOtp","errorMessage","setErrorMessage","isOtpSent","setIsOtpSent","isVerifying","setIsVerifying","navigate","handleSendOtp","error","handleVerifyOtp","response","console","log","message","session","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { sendOtp, verifyOtp } from '../services/authService';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n  const [isVerifying, setIsVerifying] = useState(false); // To track verification status\r\n  const navigate = useNavigate();\r\n\r\n  const handleSendOtp = async () => {\r\n    if (!email) {\r\n      setErrorMessage('Please enter a valid email.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setErrorMessage(''); // Clear any previous error messages\r\n      await sendOtp(email);\r\n      setIsOtpSent(true); // OTP sent\r\n      setOtp(''); // Clear the OTP input field\r\n    } catch (error) {\r\n      setErrorMessage('Failed to send OTP. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      setErrorMessage('Please enter the OTP.');\r\n      return;\r\n    }\r\n\r\n    setIsVerifying(true); // Set verifying state to true\r\n    setErrorMessage(''); // Clear any previous error messages\r\n\r\n    try {\r\n      const response = await verifyOtp(email, otp); // Verify the OTP\r\n      console.log('Full OTP verification response:', response); // Log full response\r\n      const { message, session } = response; // Destructure message and session\r\n\r\n      if (message === 'OTP verified successfully, user logged in.') {\r\n        console.log('OTP verified successfully, user logged in', session);\r\n        navigate('/home'); // Navigate to home\r\n      } else {\r\n        setErrorMessage('Invalid OTP. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during OTP verification:', error); // Log any errors\r\n      setErrorMessage('Error during OTP verification. Please try again later.');\r\n    } finally {\r\n      setIsVerifying(false); // Reset verifying state after process\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h2>Login</h2>\r\n\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={handleSendOtp}\r\n          disabled={isOtpSent} // Disable the button after OTP is sent\r\n        >\r\n          {isOtpSent ? 'OTP Sent' : 'Send OTP'}\r\n        </button>\r\n      </div>\r\n\r\n      {isOtpSent && (\r\n        <div className=\"otp-section\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter OTP\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n            />\r\n          </div>\r\n          <button onClick={handleVerifyOtp} disabled={isVerifying}>\r\n            {isVerifying ? 'Verifying...' : 'Verify OTP'}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error message display */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}