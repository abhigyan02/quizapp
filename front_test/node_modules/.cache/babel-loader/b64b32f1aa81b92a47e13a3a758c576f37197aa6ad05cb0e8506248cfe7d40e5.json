{"ast":null,"code":"// src/services/authService.js\n\nexport const sendOtp = async email => {\n  const response = await fetch('http://localhost:5000/api/send-otp', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to send OTP');\n  }\n};\nexport const verifyOtp = async (email, otp) => {\n  const response = await fetch('http://localhost:5000/api/verify-otp', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      otp\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to verify OTP');\n  }\n  const data = await response.json();\n  return data.isVerified; // Assuming the response contains `isVerified` field\n};","map":{"version":3,"names":["sendOtp","email","response","fetch","method","headers","body","JSON","stringify","ok","Error","verifyOtp","otp","data","json","isVerified"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\n\r\nexport const sendOtp = async (email) => {\r\n    const response = await fetch('http://localhost:5000/api/send-otp', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email }),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error('Failed to send OTP');\r\n    }\r\n  };\r\n  \r\n  export const verifyOtp = async (email, otp) => {\r\n    const response = await fetch('http://localhost:5000/api/verify-otp', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, otp }),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error('Failed to verify OTP');\r\n    }\r\n  \r\n    const data = await response.json();\r\n    return data.isVerified; // Assuming the response contains `isVerified` field\r\n  };\r\n  "],"mappings":"AAAA;;AAEA,OAAO,MAAMA,OAAO,GAAG,MAAOC,KAAK,IAAK;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IACjEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAM,CAAC;EAChC,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACvC;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOV,KAAK,EAAEW,GAAG,KAAK;EAC7C,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;IACnEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEW;IAAI,CAAC;EACrC,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EAEA,MAAMG,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,UAAU,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}