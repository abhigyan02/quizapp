{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Import useNavigate for programmatic navigation\nimport { getQuizzes } from '../api'; // Assuming getQuizzes fetches quizzes from the backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [quizzes, setQuizzes] = useState([]); // Store quizzes in state\n  const [loading, setLoading] = useState(true); // Track loading state\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  useEffect(() => {\n    async function fetchQuizzes() {\n      try {\n        const data = await getQuizzes(); // Fetch quizzes from the backend API\n        setQuizzes(data); // Set quizzes data to state\n        // Redirect to a different page after quizzes are successfully fetched\n        if (data.length === 0) {\n          // Redirect to an alternative page if no quizzes are available\n          navigate('/no-quizzes'); // Example redirection if no quizzes found\n        }\n      } catch (error) {\n        console.error('Error fetching quizzes:', error); // Error handling\n      } finally {\n        setLoading(false); // Set loading to false once data is fetched\n      }\n    }\n    fetchQuizzes(); // Call the function to fetch quizzes\n  }, [navigate]); // Empty dependency array means this runs only once, when the component is mounted\n\n  // If quizzes are still loading, display a loading message\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading quizzes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-cards-container\",\n      children: quizzes.length > 0 ? quizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/quiz/${quiz.id}`,\n          className: \"quiz-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: quiz.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: quiz.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, quiz.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No quizzes available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) // If no quizzes are available\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"xHeB4x/S/vuCwwoVhgiCqOVWq7I=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","getQuizzes","jsxDEV","_jsxDEV","HomePage","_s","quizzes","setQuizzes","loading","setLoading","navigate","fetchQuizzes","data","length","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","quiz","to","id","title","description","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/HomePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import useNavigate for programmatic navigation\r\nimport { getQuizzes } from '../api'; // Assuming getQuizzes fetches quizzes from the backend\r\n\r\nconst HomePage = () => {\r\n  const [quizzes, setQuizzes] = useState([]); // Store quizzes in state\r\n  const [loading, setLoading] = useState(true); // Track loading state\r\n  const navigate = useNavigate(); // Initialize the navigate function\r\n\r\n  useEffect(() => {\r\n    async function fetchQuizzes() {\r\n      try {\r\n        const data = await getQuizzes(); // Fetch quizzes from the backend API\r\n        setQuizzes(data); // Set quizzes data to state\r\n        // Redirect to a different page after quizzes are successfully fetched\r\n        if (data.length === 0) {\r\n          // Redirect to an alternative page if no quizzes are available\r\n          navigate('/no-quizzes'); // Example redirection if no quizzes found\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching quizzes:', error); // Error handling\r\n      } finally {\r\n        setLoading(false); // Set loading to false once data is fetched\r\n      }\r\n    }\r\n\r\n    fetchQuizzes(); // Call the function to fetch quizzes\r\n  }, [navigate]); // Empty dependency array means this runs only once, when the component is mounted\r\n\r\n  // If quizzes are still loading, display a loading message\r\n  if (loading) {\r\n    return <div>Loading quizzes...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Available Quizzes</h1>\r\n      <div className=\"quiz-cards-container\">\r\n        {quizzes.length > 0 ? (\r\n          quizzes.map((quiz) => (\r\n            <div key={quiz.id} className=\"quiz-card\">\r\n              <Link to={`/quiz/${quiz.id}`} className=\"quiz-link\">\r\n                <h3>{quiz.title}</h3>\r\n                <p>{quiz.description}</p> {/* Optional description */}\r\n              </Link>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div>No quizzes available</div> // If no quizzes are available\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}