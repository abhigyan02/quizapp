{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kholoods\\\\react\\\\quizapp\\\\front_test\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { verifyOtp } from '../services/authService'; // Make sure this service is correctly defined\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const navigate = useNavigate(); // For navigation\n\n  // Handle sending OTP to email\n  const handleSendOtp = async () => {\n    try {\n      await sendOtp(email); // Assume sendOtp is correctly defined elsewhere\n      setIsOtpSent(true); // Mark OTP as sent\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage('Failed to send OTP. Please try again.');\n    }\n  };\n\n  // Handle OTP verification and redirection to quizzes page\n  const handleVerifyOtp = async () => {\n    try {\n      const response = await verifyOtp(email, otp); // Make API call to verify OTP\n\n      if (response.message === 'OTP verified successfully. User logged in.') {\n        // Save the quizzes and session data if needed (could use context or state management)\n        // Navigate to quizzes page on success\n        navigate('/quizzes'); // Redirect to quizzes page after OTP verification\n      } else {\n        setErrorMessage('Invalid OTP. Please try again.');\n      }\n    } catch (error) {\n      setErrorMessage('Error during OTP verification. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendOtp,\n      disabled: isOtpSent,\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isOtpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"gvSxYC8VKz2FgQo12wpfuyNKAk8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","verifyOtp","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","email","setEmail","otp","errorMessage","setErrorMessage","isOtpSent","setIsOtpSent","navigate","handleSendOtp","sendOtp","error","handleVerifyOtp","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","setOtp","_c","$RefreshReg$"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { verifyOtp } from '../services/authService'; // Make sure this service is correctly defined\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n  const navigate = useNavigate(); // For navigation\r\n\r\n  // Handle sending OTP to email\r\n  const handleSendOtp = async () => {\r\n    try {\r\n      await sendOtp(email); // Assume sendOtp is correctly defined elsewhere\r\n      setIsOtpSent(true); // Mark OTP as sent\r\n      setErrorMessage('');\r\n    } catch (error) {\r\n      setErrorMessage('Failed to send OTP. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Handle OTP verification and redirection to quizzes page\r\n  const handleVerifyOtp = async () => {\r\n    try {\r\n      const response = await verifyOtp(email, otp); // Make API call to verify OTP\r\n\r\n      if (response.message === 'OTP verified successfully. User logged in.') {\r\n        // Save the quizzes and session data if needed (could use context or state management)\r\n        // Navigate to quizzes page on success\r\n        navigate('/quizzes'); // Redirect to quizzes page after OTP verification\r\n      } else {\r\n        setErrorMessage('Invalid OTP. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Error during OTP verification. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <button onClick={handleSendOtp} disabled={isOtpSent}>\r\n        Send OTP\r\n      </button>\r\n\r\n      {isOtpSent && (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n        </>\r\n      )}\r\n\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}