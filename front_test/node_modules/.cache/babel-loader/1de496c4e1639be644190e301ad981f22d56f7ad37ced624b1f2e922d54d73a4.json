{"ast":null,"code":"import React,{useState}from'react';import{sendOtp,verifyOtp}from'../api';// Import the necessary functions\nimport'../../src/App.css';// Import the CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const[email,setEmail]=useState('');const[otp,setOtp]=useState('');const[errorMessage,setErrorMessage]=useState('');const[isOtpSent,setIsOtpSent]=useState(false);// Function to send OTP to the provided email\nconst handleSendOtp=async()=>{if(!email){setErrorMessage('Please enter a valid email.');return;}try{const response=await sendOtp(email);if(response&&response.message==='OTP sent successfully'){setIsOtpSent(true);setErrorMessage('');}else{setErrorMessage(response.message||'Failed to send OTP');}}catch(error){console.error(\"Error during OTP sending:\",error);setErrorMessage(error.message||'An error occurred while sending OTP.');}};// Function to handle OTP verification\nconst handleVerifyOtp=async()=>{if(!email||!otp){setErrorMessage('Please enter both email and OTP');return;}try{const response=await verifyOtp(email,otp);// Log the entire response to check the structure\nconsole.log('OTP verification response:',response);if(response&&response.message==='OTP verified successfully, user logged in.'){// Check the structure of the response to see if session_id and userId are available\nconst{session_id,userId}=response;// Directly destructuring response instead of response.session\n// Log the session_id and userId to ensure correct values\nconsole.log('Session ID:',session_id);console.log('User ID:',userId);// Save session_id and userId in localStorage\nlocalStorage.setItem('session_id',session_id);// Save session_id\nlocalStorage.setItem('userId',userId);// Save userId\n// Optionally, you can save the whole session data if needed\n//localStorage.setItem('session', JSON.stringify(response.session));  // Save entire session\n// Redirect to home or wherever you need\nwindow.location.href='/home';// Or navigate using react-router-dom if you prefer\n}else{setErrorMessage(response.message||'OTP verification failed');}}catch(error){console.error(\"Error during OTP verification:\",error);setErrorMessage(error.message||'An error occurred during OTP verification. Please try again later.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-page\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"input-field\",placeholder:\"Enter your email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"otp-button\",onClick:handleSendOtp,children:\"Send OTP\"})]}),isOtpSent&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-field\",placeholder:\"Enter OTP\",value:otp,onChange:e=>setOtp(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"otp-button\",onClick:handleVerifyOtp,children:\"Verify OTP\"})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage}),isOtpSent&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:\"OTP sent successfully. Please check your email.\"})]});};export default LoginPage;","map":{"version":3,"names":["React","useState","sendOtp","verifyOtp","jsx","_jsx","jsxs","_jsxs","LoginPage","email","setEmail","otp","setOtp","errorMessage","setErrorMessage","isOtpSent","setIsOtpSent","handleSendOtp","response","message","error","console","handleVerifyOtp","log","session_id","userId","localStorage","setItem","window","location","href","className","children","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/kholoods/react/quizapp/front_test/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { sendOtp, verifyOtp } from '../api';  // Import the necessary functions\r\nimport '../../src/App.css';  // Import the CSS file\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n\r\n  // Function to send OTP to the provided email\r\n  const handleSendOtp = async () => {\r\n    if (!email) {\r\n      setErrorMessage('Please enter a valid email.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await sendOtp(email);\r\n      if (response && response.message === 'OTP sent successfully') {\r\n        setIsOtpSent(true);\r\n        setErrorMessage('');\r\n      } else {\r\n        setErrorMessage(response.message || 'Failed to send OTP');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during OTP sending:\", error);\r\n      setErrorMessage(error.message || 'An error occurred while sending OTP.');\r\n    }\r\n  };\r\n\r\n  // Function to handle OTP verification\r\n  const handleVerifyOtp = async () => {\r\n    if (!email || !otp) {\r\n      setErrorMessage('Please enter both email and OTP');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await verifyOtp(email, otp);\r\n  \r\n      // Log the entire response to check the structure\r\n      console.log('OTP verification response:', response);\r\n  \r\n      if (response && response.message === 'OTP verified successfully, user logged in.') {\r\n        // Check the structure of the response to see if session_id and userId are available\r\n        const { session_id, userId } = response;  // Directly destructuring response instead of response.session\r\n  \r\n        // Log the session_id and userId to ensure correct values\r\n        console.log('Session ID:', session_id);\r\n        console.log('User ID:', userId);\r\n  \r\n        // Save session_id and userId in localStorage\r\n        localStorage.setItem('session_id', session_id);  // Save session_id\r\n        localStorage.setItem('userId', userId);          // Save userId\r\n  \r\n        // Optionally, you can save the whole session data if needed\r\n        //localStorage.setItem('session', JSON.stringify(response.session));  // Save entire session\r\n  \r\n        // Redirect to home or wherever you need\r\n        window.location.href = '/home';  // Or navigate using react-router-dom if you prefer\r\n      } else {\r\n        setErrorMessage(response.message || 'OTP verification failed');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during OTP verification:\", error);\r\n      setErrorMessage(error.message || 'An error occurred during OTP verification. Please try again later.');\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"login-page\" >\r\n      {/*<video autoPlay loop muted className=\"video-background\">\r\n        <source src=\"matrix-rain-codes.1920x1080.mp4\" type=\"video/mp4\" />\r\n      </video>*/}\r\n     \r\n      <div> \r\n      <h2 >Login</h2>\r\n\r\n      {/* Email Input */}\r\n    \r\n        <input\r\n          type=\"email\"\r\n          className=\"input-field\"\r\n          placeholder=\"Enter your email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button className=\"otp-button\" onClick={handleSendOtp}>Send OTP</button>\r\n      </div>\r\n\r\n      {/* OTP Input */}\r\n      {isOtpSent && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-field\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button className=\"otp-button\" onClick={handleVerifyOtp}>Verify OTP</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error Message Display */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n      {/* OTP sent message */}\r\n      {isOtpSent && <p className=\"success-message\">OTP sent successfully. Please check your email.</p>}\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}